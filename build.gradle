plugins {
	id 'java'
}

group 'net.devtech'
version '1.0.0-SNAPSHOT'

sourceSets {
	client {
		java {
			compileClasspath += sourceSets.main.output
			runtimeClasspath += sourceSets.main.output
		}
	}
}

configurations {
	clientImplementation.extendsFrom(implementation)
}

repositories {
	mavenCentral()

	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots/'
	}
}

def lwjglVersion = '3.3.0-SNAPSHOT'
def lwjglNatives = 'natives-windows'

dependencies {
	implementation 'org.ow2.asm:asm:9.2'
	implementation 'org.ow2.asm:asm-commons:9.2'
	implementation 'com.google.guava:guava:31.0.1-jre'
	implementation 'it.unimi.dsi:fastutil:8.5.6'
	implementation 'org.jetbrains:annotations:22.0.0'

	implementation 'io.netty:netty-handler:4.1.75.Final'
	implementation 'io.netty:netty-codec-http:4.1.75.Final'
	implementation 'io.netty:netty-transport-native-epoll:4.1.75.Final'
	implementation 'io.netty:netty-transport-native-kqueue:4.1.75.Final'

	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-stb"

	clientRuntimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	clientRuntimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	clientRuntimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
	clientRuntimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	clientRuntimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

	testImplementation 'com.google.jimfs:jimfs:1.2'
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.release.set(17)
}

test {
	useJUnitPlatform()
}

task startClient(type: JavaExec) {
	group = 'run'
	description = 'Starts a client'

	classpath = sourceSets.client.output + sourceSets.client.runtimeClasspath
	mainClass.set('net.devtech.jerraria.client.main.ClientMain')
}

task startServer(type: JavaExec) {
	group = 'run'
	description = 'Starts a dedicated server'

	classpath = sourceSets.main.output + sourceSets.main.runtimeClasspath
	mainClass.set('net.devtech.jerraria.server.dedicated.ServerMain')
}
